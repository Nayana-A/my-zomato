trigger:
- main

variables:
  # Docker / ACR
  dockerRegistryServiceConnection: '467aebc6-c2d7-48d1-af79-d79a67c80398'
  imageRepository: 'foodcart-node'
  containerRegistry: 'myacr.azurecr.io'
  dockerfilePath: '.github/manifests/Dockerfile'
  tag: '$(Build.BuildId)'

  # AKS
  azureSubscriptionEndpoint: 'default'
  azureResourceGroup: 'Nayana'
  kubernetesCluster: 'managedevopsagent'
  namespace: 'prod'
  manifestsPath: '.github/manifests/deployment.yaml'

pool:
  name: magedpool

stages:

# ----------------------------
# 1️⃣ Build & Push Docker Image using ACR Build
# ----------------------------
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: Build
    displayName: 'ACR Build & Push'
    steps:

    # Debug: list repo files
    - script: |
        echo "Listing repository files..."
        ls -R
      displayName: 'List files in repository'

    # ✅ Build & Push image using Azure Container Registry
    - task: AzureCLI@2
      displayName: 'Build and Push image using ACR'
      inputs:
        azureSubscription: 'default'  # use your service connection name
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Starting ACR build..."
          az acr build \
            --registry myacr \
            --image $(imageRepository):$(tag) \
            --file $(dockerfilePath) \
            .

    # ✅ Update Kubernetes manifest with new image tag
    - script: |
        echo "Updating manifest with new image tag..."
        sed -i "s|image: .*|image: $(containerRegistry)/$(imageRepository):$(tag)|g" $(manifestsPath)
      displayName: 'Update Kubernetes Manifest with Image Tag'

    # ✅ Publish manifest as artifact
    - publish: .github/manifests
      artifact: manifests


# ----------------------------
# 2️⃣ Deploy to AKS
# ----------------------------
- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy Application to AKS'
    steps:
    # Download updated manifest
    - download: current
      artifact: manifests

    # ✅ Deploy manifest to AKS
    - task: Kubernetes@1
      displayName: 'Deploy to AKS'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureResourceGroup: $(azureResourceGroup)
        kubernetesCluster: $(kubernetesCluster)
        namespace: $(namespace)
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Pipeline.Workspace)/manifests/deployment.yaml'
